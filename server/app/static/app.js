// Generated by CoffeeScript 1.10.0
(function() {
  window.speak = function(word) {
    var utterance;
    utterance = new SpeechSynthesisUtterance(word);
    utterance.lang = 'zh-CN';
    utterance.rate = 0.8;
    return window.speechSynthesis.speak(utterance);
  };

  window.saveVocab = function(e, word) {
    return $.ajax({
      type: 'POST',
      url: '/api/vocab/add',
      data: {
        phrase: word
      },
      success: function(data) {
        $("[data-word='" + word + "']").removeClass('not-in-vocab').addClass('in-vocab');
        return $(e).remove();
      },
      error: function(req, status, err) {
        return alert(req.responseJSON['error']);
      }
    });
  };

  window.deleteVocab = function(word) {
    var d, m;
    m = $('#myModal');
    m.find('#vocab-word').text(word);
    d = $('#delete', m);
    d.click(function() {
      return $.ajax({
        type: 'POST',
        url: '/api/vocab/delete',
        data: {
          phrase: word
        },
        success: function(data) {
          $("[data-word='" + word + "']").remove();
          return m.modal('hide');
        },
        error: function(req, status, err) {
          return alert(req.responseJSON['error']);
        }
      });
    });
    return m.modal();
  };

  window.deleteDocument = function(document_id) {
    var d, m;
    m = $('#myModal');
    d = $('#delete', m);
    d.click(function() {
      return $.ajax({
        type: 'POST',
        url: '/delete/' + document_id,
        success: function() {
          $('#document_' + document_id).remove();
          return m.modal('hide');
        },
        error: function(req, status, err) {
          return alert('ERROR', req, status, err);
        }
      });
    });
    return m.modal();
  };

  $('.word').bind('click', function() {
    var in_vocab, this_, word;
    $(this).unbind('click');
    word = $(this).attr('data-word');
    in_vocab = $(this).hasClass('in-vocab');
    this_ = this;
    return $.getJSON('/api/define?word=' + word, function(data) {
      var content, d, def, defs, i, j, len, len1, ref, title;
      title = '<b>' + word + '</b>' + '&nbsp;' + '<span class="pull-right">';
      if (!in_vocab) {
        title += '<button class="btn btn-xs btn-success" onclick="javascript:window.saveVocab(this, \'' + word + '\');">' + '<span class="glyphicon glyphicon-plus" id="save" ></span>' + '</button>';
      }
      title += '&nbsp;' + '<button class="btn btn-xs btn-info" onclick="javascript:window.speak(\'' + word + '\');">' + '<span class="glyphicon glyphicon-volume-up"></span>' + '</button>' + '</span>';
      defs = data['definitions'];
      content = '';
      for (i = 0, len = defs.length; i < len; i++) {
        def = defs[i];
        content += '<b>' + def['pinyin'] + '</b>';
        content += '<ul>';
        ref = def['definitions'];
        for (j = 0, len1 = ref.length; j < len1; j++) {
          d = ref[j];
          content += '<li>' + d + '</li>';
        }
        content += '</ul>';
      }
      $(this_).popover({
        title: title,
        content: content,
        html: true,
        placement: 'auto top',
        trigger: 'focus click'
      });
      return $(this_).click();
    });
  });

  window.speak('');

}).call(this);
